:root {
  --primary-color: #a53860;
  --secondary-color: #da627d;
  --dark-grey: #2b2b2b;
  --color-visited: #ffa5ab;
  --color-active: #f9dbbd;
  --sun-state1: #edc655;
  --sun-state2: #fcffad;
  --sun-state3: #f76414;
  --font-light: 300;
  --font-reg: 400;
  --font-s: 16px;
  --font-m: 18px;
  --font-l: 24px;
  --font-xl: 30px;
  --padding-s: 10px;
  --padding-l: 20px;
}

body {
  font-family: 'Poppins', sans-serif;
  font-weight: var(--font-light);
  font-size: var(--font-s);
  line-height: 1.6;
}

* {
  box-sizing: border-box;
}

h1 {
  font-size: var(--font-xl);
  font-weight: var(--font-reg);
}

h2 {
  font-size: var(--font-l);
  font-weight: var(--font-reg);
}

h3 {
  font-size: var(--font-m);
  font-weight: var(--font-reg);
}

a {
  color: var(--primary-color);
}

a:visited {
  color: var(--color-visited);
}

a:hover,
a:focus {
  text-decoration: none;
}

a:active {
  color: var(--color-active);
}

button,
.button {
  border: none;
  display: inline-block;
  font-family: inherit;
  font-weight: var(--font-reg);
  background-color: var(--secondary-color);
  color: var(--dark-grey);
  text-decoration: none;
  padding: var(--padding-s);
  border-radius: 4px;
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition-duration: 0.4s;
  transition-property: opacity;
}

button:hover,
button:focus,
.button:hover,
.button:focus {
  cursor: pointer;
  opacity: 0.8;
}

.navigation-list__item--active {
  text-decoration: none;
}

.profile__portrait {
  float: left;
  width: 250px;
  margin-right: 40px;
  border-radius: 50%;
}

.page-footer {
  clear: both;
  display: flex;
  flex-direction: column;
  text-align: center;
}

.social-media {
  display: inline-block;
  flex-direction: row;
  justify-content: center;
}

.social-media img {
  width: 30px;
}

.profile {
  max-width: 700px;
  padding: var(--padding-l);
  margin: 0 auto;
}

.about {
  width: 100%;
  margin: 0 auto;
  padding: var(--padding-l);
  text-align: center;
}

.about-list {
  list-style-type: none;
  padding: 0;
}

.skills {
  display: flex;
  justify-content: center;
}

.skill-bars {
  padding: 25px 30px;
  width: 600px;
  border-radius: 10px;
  text-align: left;
}

.skill-bars .bar {
  margin: 20px 0;
}

.skill-bars .bar:first-child {
  margin-top: 0;
}

.skill-bars .bar .info {
  margin-bottom: 5px;
}

.skill-bars .bar .info span {
  font-weight: var(--font-reg);
  font-size: var(--font-s);
  opacity: 0;
  animation: showText 0.5s 1s linear forwards;
}

@keyframes showText {
  100% {
    opacity: 1;
  }
}

.skill-bars .bar .progress-line {
  height: 10px;
  width: 100%;
  background: #f0f0f0;
  position: relative;
  transform: scaleX(0);
  transform-origin: left;
  border-radius: 10px;
  box-shadow:
    inset 0 1px 1px rgba(0, 0, 0, 0.05),
    0 1px rgba(255, 255, 255, 0.8);
  animation: animate 1s cubic-bezier(1, 0, 0.5, 1) forwards;
}

@keyframes animate {
  100% {
    transform: scaleX(1);
  }
}

.bar .progress-line span {
  height: 100%;
  position: absolute;
  border-radius: 10px;
  transform: scaleX(0);
  transform-origin: left;
  background: var(--primary-color);
  animation: animate 1s 1s cubic-bezier(1, 0, 0.5, 1) forwards;
}

.bar .progress-line.html span {
  width: 60%;
}

.bar .progress-line.css span {
  width: 50%;
}

.bar .progress-line.js span {
  width: 40%;
}

.bar .progress-line.pm span {
  width: 90%;
}

.progress-line span::before {
  position: absolute;
  content: "";
  top: -10px;
  right: 0;
  height: 0;
  width: 0;
  border: 7px solid transparent;
  border-bottom-width: 0;
  border-right-width: 0;
  border-top-color: #000;
  opacity: 0;
  animation: showText2 0.5s 1.5s linear forwards;
}

.progress-line span::after {
  position: absolute;
  top: -28px;
  right: 0;
  font-weight: var(--font-reg);
  background: #000;
  color: #fff;
  padding: 1px 8px;
  font-size: var(--font-s);
  border-radius: 3px;
  opacity: 0;
  animation: showText2 0.5s 1.5s linear forwards;
}

@keyframes showText2 {
  100% {
    opacity: 1;
  }
}

.progress-line.html span::after {
  content: "60%";
}

.progress-line.css span::after {
  content: "50%";
}

.progress-line.js span::after {
  content: "40%";
}

.progress-line.pm span::after {
  content: "90%";
}

.contact {
  max-width: 700px;
  padding: var(--padding-l);
  margin: 0 auto;
}

.page-header {
  display: flex;
  width: 100%;
  padding: var(--padding-l);
}

.work {
  width: 100%;
  padding: var(--padding-l);
}

.experience {
  width: 100%;
  padding: var(--padding-l);
}

.page-header__item {
  flex: 0 1 200px;
}

.page-header__logo {
  width: 100%;
}

.page-header__item:last-child {
  flex-grow: 1;
  text-align: right;
}

.navigation-list {
  list-style-type: none;
}

.navigation-list li {
  display: inline-block;
  margin-left: 15px;
}

.grid__item {
  display: inline-block;
  width: 33%;
}

@supports (display: grid) {
  .grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 20px;
    margin: 0;
  }
}

.grid__item {
  background-color: lightgray;
  width: auto;
  min-height: auto;
  margin: 0;
  padding: var(--padding-l);
}

.grid__item:last-child {
  grid-column: 3 / 3;
  grid-row: 1 / 3;
}

@media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr;
  }
}

@media all and (min-width: 501px) and (max-width: 750px) {
  .grid {
    grid-template-columns: 1fr 1fr;
  }
}

@media all and (max-width: 750px) {
  .grid {
    grid-gap: 10px;
  }

  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
}

@keyframes color-change {
  0% {
    fill: var(--sun-state1);
  }

  50% {
    fill: var(--sun-state2);
  }

  100% {
    fill: var(--sun-state3);
  }
}

.berlin-illustration {
  max-width: 750px;
}

.sun {
  animation: 4s color-change infinite alternate linear;
}

@keyframes cloud-move {
  from {
    transform: translate(0, 50px);
  }

  to {
    transform: translate(200px, 50px);
  }
}

.cloud-front {
  animation: 30s cloud-move infinite alternate linear;
}

@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
  }

  to {
    transform: translate(100px, 48px);
  }
}

.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
}
